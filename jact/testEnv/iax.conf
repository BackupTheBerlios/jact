
; Inter-Asterisk eXchange driver definition
;
;
; General settings, like port number to bind to, and
; an option address (the default is to bind to all
; local addresses).
;
[general]
port=5036
;bindaddr=192.168.0.1
;
; Set iaxcompat to yes if you plan to use layered 
; switches.  It incurs a small performance hit to enable it
;
;iaxcompat=yes
;
; You may specify a global default AMA flag for iaxtel calls.  It must be
; one of 'default', 'omit', 'billing', or 'documentation'.  These flags
; are used in the generation of call detail records.
;
;amaflags=default
;
; You may specify a default account for Call Detail Records in addition
; to specifying on a per-user basis
;
;accountcode=lss0101
;
; You may specify a global default language for users. 
; Can be specified also on a per-user basis
; If omitted, will fallback to english
;
language=de
;
; Specify bandwidth of low, medium, or high to control which codecs are used
; in general.
;
bandwidth=low
;
; You can also fine tune codecs here using "allow" and "disallow" clauses
; with specific codecs.  Use "all" to represent all formats.
;
;allow=all			; same as bandwidth=high
;disallow=g723.1		; Hm...  Proprietary, don't use it...
disallow=lpc10			; Icky sound quality...  Mr. Roboto.
;allow=gsm			; Always allow GSM, it's cool :)
;
; You can also adjust several parameters relating to the jitter
; buffer.  Specifically, you can provide a maximum jitter buffer,
; you can turn it off entirely, and you can specify an acceptable
; drop rate (per MEMORY_SIZE, by default 3 of 100).  Disabling the
; jitter buffer is generally recommended unless you are on a highly
; jittery network, since usually jitter buffering will cause you additional
; latency.  Finally, you can specify the maximum
; excess jitter buffer, which if exceeded, causes the jitter buffer to
; slowly shrink in order to improve latency.
;
jitterbuffer=no
;dropcount=3
;maxjitterbuffer=500
;maxexcessbuffer=100
;
;trunkfreq=20			; How frequently to send trunk msgs (in ms)
;
;
; We can register with another IAX server to let him know where we are
; in case we have a dynamic IP address for example
;
;------------------------------------------------------------------------
;register with beronet --------

;register => urstester:urs451@62.180.50.220


;
; Register joe at remote host with no password
;
;register => joe@remotehost:5656
;
; Register marko at tormenta.linux-support.net using RSA key "torkey"
;
;register => marko:[torkey]@tormenta.linux-support.net
;
;
; You can disable authentication debugging to reduce the amount of 
; debugging traffic.
;
;authdebug=no
;
; Finally, you can set values for your TOS bits to help improve 
; performance.  Valid values are:
;   lowdelay		-- Minimize delay
;   throughput		-- Maximize throughput
;   reliability		-- Maximize reliability
;   mincost		-- Minimize cost
;   none		-- No flags
;
tos=lowdelay
;
; Guest sections for unauthenticated connection attempts.  Just
; specify an empty secret, or provide no secret section.
;
[guest]
type=user
context=default
callerid="Guest IAX User"

;
; Trust Caller*ID Coming from iaxtel.com
;
[iaxtel]
type=user
context=default
auth=rsa
inkeys=iaxtel

[iaxtel2]
;
; Backwards compatible entry for IAXtel pre-RSA
;
type=user
context=default
deny=0.0.0.0/0.0.0.0
;permit=216.207.245.47/255.255.255.255

;
; Further user sections may be added, specifying a context and a
; secret used for connections with that given authentication name.
; Limited IP based access control is allowed by use of "allow" and
; "deny" keywords.  Multiple rules are permitted.  Multiple permitted
; contexts may be specified, in which case the first will be the default.
; You can also override caller*ID so that when you receive a call you
; set the Caller*ID to be what you want instead of trusting what
; the remote user provides
;
; There are three authentication methods that are supported:  md5, plaintext,
; and rsa.  The least secure is "plaintext", which sends passwords cleartext
; across the net.  "md5" uses a challenge/response md5 sum arrangement, but
; still requires both ends have plain text access to the secret.  "rsa" allows
; unidirectional secret knowledge through public/private keys.  If "rsa"
; authentication is used, "inkeys" is a list of acceptable public keys on the 
; local system that can be used to authenticate the remote peer, separated by
; the ":" character.  "outkey" is a single, private key to use to authenticate
; to the other side.  Public keys are named /var/lib/asterisk/keys/<name>.pub
; while private keys are named /var/lib/asterisk/keys/<name>.key.  Private
; keys should always be 3DES encrypted.
;
;
;[markster]
;type=user
;context=default
;context=local
;auth=md5,plaintext,rsa
;secret=markpasswd
;notransfer=yes		; Disable IAX native transfer
;callerid="Mark Spencer" <(256) 428-6275>
;deny=0.0.0.0/0.0.0.0
;accountcode=markster0101
;permit=209.16.236.73/255.255.255.0
;language=en		; Use english as default language
;
; Peers may also be specified, with a secret and
; a remote hostname.

;----------------------------
;beronethost ----------------
;[beronet]
;type=ursi
;secret=urs123
;context=inbound 

;
[urstester]
type=friend
user=urstester
secret=urs451
context=sip
host=dynamic
callerid=39
qualify=1000

;
[urs]
type=friend
;context=default
context=callshop
;context=local
;context=iaxout
auth=plaintext
username=urs
secret=urs
;defaultip=192.169.10.1
;host=192.168.10.1
mailbox=200
;sendani=no
host=dynamic
;port=5036
;mask=255.255.255.255
;qualify=yes	; Make sure this peer is alive

[test]
type=friend
context=default
auth=plaintext
username=test
secret=test
host=dynamic


[urs1]
type=friend
;context=homezone
context=default
context=sip
;context=local
;context=iaxout
auth=plaintext
;username=urs
secret=urs
defaultip=192.169.10.1
;host=192.168.10.1
mailbox=1000
;sendani=no
;host=asterisk.linux-support.net
;port=5036
;mask=255.255.255.255
;qualify=yes	; Make sure this peer is alive
callerid=101

[kai]
type=peer
;context=homezone
;context=default
context=sip
;context=local
;context=iaxout
auth=plaintext
;username=urs
secret=kai
;defaultip=192.169.10.1
;host=192.168.10.1
;mailbox=1000
;sendani=no
;host=asterisk.linux-support.net
;port=5036
;mask=255.255.255.255
;qualify=yes	; Make sure this peer is alive
callerid=kai


[urs1]
type=friend
;context=homezone
context=default
context=sip
;context=local
;context=iaxout
auth=plaintext
;username=urs
secret=urs
defaultip=192.169.10.1
;host=192.168.10.1
mailbox=1000
;sendani=no
;host=asterisk.linux-support.net
;port=5036
;mask=255.255.255.255
;qualify=yes	; Make sure this peer is alive
callerid=101



;
; Peers can remotely register as well, so that they can be
; mobile.  Default IP's can also optionally be given but
; are not required.  Caller*ID can be suggested to the other
; side as well if it is for example a phone instead of another
; PBX.
;

;[dynamichost]
;host=dynamic
;secret=mysecret
;mailbox=1234		; Notify about mailbox 1234
;inkeys=key1:key2
;defaultip=216.207.245.34
;callerid="Some Host" <(256) 428-6011>
;

;
;[biggateway]
;type=peer
;host=192.168.0.1
;secret=myscret
;trunk=yes		; Use IAX2 trunking with this host
;

;
; Friends are a short cut for creating a user and
; a peer with the same values.
;
;[marko]
;type=friend
;host=dynamic
;secret=moofoo
;context=default
;permit=0.0.0.0/0.0.0.0
