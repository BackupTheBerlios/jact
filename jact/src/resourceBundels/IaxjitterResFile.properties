
resStr_Iaxjitter=Iaxjitter
resStr_IaxjitterDesc=There are presently two jitterbuffer implementations available for * and chan_iax2<para>the classic and the new, channel/application independent implementation.  These

are controlled at compile-time.  The new jitterbuffer additionally has support for PLC

which greatly improves quality as the jitterbuffer adapts size, and in compensating for lost packets. All the jitter buffer settings except dropcount are in milliseconds. The jitter buffer works for INCOMING audio - the outbound audio will  be dejittered by the jitter buffer at the other end.

FormTitel = Iaxjitter bearbeiten
FormDesc = There are presently two jitterbuffer implementations available for * and chan_iax2<para>the classic and the new, channel/application independent implementation.  These

are controlled at compile-time.  The new jitterbuffer additionally has support for PLC

which greatly improves quality as the jitterbuffer adapts size, and in compensating for lost packets. All the jitter buffer settings except dropcount are in milliseconds. The jitter buffer works for INCOMING audio - the outbound audio will  be dejittered by the jitter buffer at the other end.
imageUrl = /icons/Iaxjitter48.png

res_strjitterbuffer=jitterbuffer
res_strjitterbufferDescription= yes|no
res_strjitterbufferDisplayName= jitterbuffer
res_strforcejitterbuffer=forcejitterbuffer
res_strforcejitterbufferDescription= yes|no
res_strforcejitterbufferDisplayName= forcejitterbuffer
res_strdropcount=dropcount
res_strdropcountDescription= the jitter buffer is sized such that no more than "dropcount" frames would have been "too late" over the last 2 seconds. Set to a small number.  "3" represents 1.5% of frames dropped [This option is not applicable to, and ignored by the new jitterbuffer implementation]
res_strdropcountDisplayName= dropcount
res_strmaxjitterbuffer=maxjitterbuffer
res_strmaxjitterbufferDescription= a maximum size for the jitter buffer. Setting a reasonable maximum here will prevent the call delay from rising to silly values in extreme situations; you'll hear SOMETHING, even though it will be jittery.
res_strmaxjitterbufferDisplayName= maxjitterbuffer
res_strresyncthreshold=resyncthreshold
res_strresyncthresholdDescription= when the jitterbuffer notices a significant change in delay that continues over a few frames, it will resync, assuming that the change in delay was caused by a timestamping mix-up. The threshold for noticing a change in delay is measured as twice the measured jitter plus this resync threshold. Resycning can be disabled by setting this parameter to -1. [This option presently applies only to the new jitterbuffer implementation]
res_strresyncthresholdDisplayName= resyncthreshold
res_strmaxjitterinterps=maxjitterinterps
res_strmaxjitterinterpsDescription= the maximum number of interpolation frames the jitterbuffer should return in a row. Since some clients do not send CNG/DTX frames to indicate silence, the jitterbuffer will assume silence has begun after returning this many interpolations. This prevents interpolating throughout a long silence. [This option presently applies only to the new jitterbuffer implementation]
res_strmaxjitterinterpsDisplayName= maxjitterinterps
res_strmaxexcessbuffer=maxexcessbuffer
res_strmaxexcessbufferDescription= If conditions improve after a period of high jitter, the jitter buffer can end up bigger than necessary.  If it ends up more than "maxexcessbuffer" bigger than needed, Asterisk will start gradually decreasing the amount of jitter buffering. [This option is not applicable to, and ignored by the new jitterbuffer implementation]
res_strmaxexcessbufferDisplayName= maxexcessbuffer
res_strminexcessbuffer=minexcessbuffer
res_strminexcessbufferDescription= Sets a desired mimimum amount of headroom in  the jitter buffer.  If Asterisk has less headroom than this, then it will start gradually increasing the amount of jitter buffering. [This option is not applicable to, and ignored by the new jitterbuffer implementation]
res_strminexcessbufferDisplayName= minexcessbuffer
res_strjittershrinkrate=jittershrinkrate
res_strjittershrinkrateDescription= when the jitter buffer is being gradually shrunk  (or enlarged), how many millisecs shall we take off per 20ms frame received?  Use a small number, or you will be able to hear it changing.  An example
res_strjittershrinkrateDisplayName= jittershrinkrate

