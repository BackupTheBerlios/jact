<?xml version="1.0" encoding="UTF-8"?><section name="root"><section name="Tables"><list key="TableNames"><item value="other"/><item value="Multilink_PPP"/><item value="Analog_Handset_Features"/><item value="Timing_Parameters"/><item value="Analog_Trunk_Features"/><item value="ISDN_PRI_Switch"/><item value="Audio_Quality_Tuning_Options"/><item value="Caller_ID_Options"/><item value="zaptelchannel"/><item value="zapataconf"/><item value="Call_Logging_Options"/></list><section name="other"><item key="ElementDescription" value="other stuff"/><item key="TableName" value="other"/><item key="JavaClassName" value="Other"/><list key="aggfields"/><list key="TableFKFields"/><list key="TablePKFields"/><list key="TableMapFields"/><list key="TableFields"><item value="mailbox"/><item value="group"/><item value="language"/></list><section name="group"><item key="ElementDescription" value="Allows you to group together a number of channels so that the Dial command will treat the group as a single channel. When Dial tries to make a call on a Zap group, the Zap channel module will use the first available (i.e. non-busy) channel in the group for the call. Multiple group memberships may be specified with commas, and to signify no group membership, the portion after the equals sign may be omitted. Group numbers can range from 0 to 31. The default value is an empty string, i.e. no groups."/><item key="OrdinalPosition" value="1"/><item key="JavaFieldName" value="Group"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="jstring"/><item key="TblFieldName" value="group"/></section><section name="mailbox"><item key="ElementDescription" value="If this option is defined for a channel, then when the handset is lifted, Asterisk will check the voicemail mailbox(es) specified here for new (unheard) messages. If there are any unheard messages in any of the mailboxes, Asterisk will use a stutter dialtone rather than the ordinary dialtone. On supported hardware, the message waiting light will also be activated � this probably requires that you also set adsi=yes. Update: This option does NOT require ADSI. It will send a standard FSK tone down the line that lights up the MWI on any capable analog phone. The parameters to this option are one or more comma-separated mailbox numbers, as defined in voicemail.conf."/><item key="OrdinalPosition" value="0"/><item key="JavaFieldName" value="Mailbox"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="jstring"/><item key="TblFieldName" value="mailbox"/></section><section name="language"><item key="ElementDescription" value="Each channel has a default language code that affects which language version of prerecorded sounds Asterisk uses for this channel. See Setting up a Multi-Language Asterisk Installation. The default is an empty string."/><item key="OrdinalPosition" value="2"/><item key="JavaFieldName" value="Language"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="jstring"/><item key="TblFieldName" value="language"/></section></section><section name="Analog_Handset_Features"><item key="ElementDescription" value="headset"/><item key="TableName" value="Analog_Handset_Features"/><item key="JavaClassName" value="Analog_Handset_Features"/><list key="aggfields"/><list key="TableFKFields"/><list key="TablePKFields"/><list key="TableMapFields"/><list key="TableFields"><item value="adsi"/><item value="immediate"/><item value="callwaiting"/><item value="callwaitingcallerid"/><item value="threewaycalling"/><item value="transfer"/><item value="cancallforward"/><item value="callreturn"/><item value="callgroup"/><item value="pickupgroup"/><item value="useincomingcalleridonzaptransfer"/></list><section name="adsi"><item key="ElementDescription" value="If your handset has ADSI (Analog Display Services Interface) capability, set set adsi=yes. The ADSI specification is system similar to Caller ID to pass encoded information to an analog handset. It allows the creation of interactive visual menus on a multiline display, offering access to services such as voicemail through a text interface."/><item key="OrdinalPosition" value="0"/><item key="JavaFieldName" value="Adsi"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="jstring"/><item key="TblFieldName" value="adsi"/></section><section name="callgroup"><item key="ElementDescription" value="A channel may belong to zero or more callgroups. Callgroups specify who may answer this phone when it is ringing. If this channel is ringing, then any other channel whose pickupgroups include one of this channel's callgroups may answer the call by dialing *8#. This feature is supported by Zap, SIP, Skinny and MGCP channels. Group numbers can range from 0 to 31. The default value is an empty string, i.e. no groups.   group=1   callgroup=1,2,3"/><item key="OrdinalPosition" value="8"/><item key="JavaFieldName" value="Callgroup"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="jstring"/><item key="TblFieldName" value="callgroup"/></section><section name="threewaycalling"><item key="ElementDescription" value="If enabled, you can place a call on hold by pressing a hook flash, whereupon you get a dialrecall tone and can make another call. Default no.    threewaycalling=yes"/><item key="OrdinalPosition" value="4"/><item key="JavaFieldName" value="Threewaycalling"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="bool"/><item key="TblFieldName" value="threewaycalling"/></section><section name="pickupgroup"><item key="ElementDescription" value="A channel may belong to zero or more pickupgroups. Pickupgroups specify whose phones you may answer. If another channel is ringing, and this channel's pickupgroups include one of the ringing channel's callgroups, then this channel may answer the call by dialing *8#. Group numbers can range from 0 to 31. The default value is an empty string, i.e. no groups."/><item key="OrdinalPosition" value="9"/><item key="JavaFieldName" value="Pickupgroup"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="jstring"/><item key="TblFieldName" value="pickupgroup"/></section><section name="callreturn"><item key="ElementDescription" value="If enabled, you may dial *69 to have Asterisk read to you the caller ID of the last person to call. You will hear the dialrecall tone if there is no record of a last caller. Default no.    callreturn=yes"/><item key="OrdinalPosition" value="7"/><item key="JavaFieldName" value="Callreturn"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="bool"/><item key="TblFieldName" value="callreturn"/></section><section name="immediate"><item key="ElementDescription" value="Normally (i.e. with immediate set to 'no', the default), when you lift an FXS handset, the Zaptel driver provides you a dialtone and listens for digits that you dial, passing them on to Asterisk. Asterisk waits until the number you've dialed matches an extension, and then begins executing the first command on the matching extension. If you set immediate=yes, then Asterisk will instruct the Zaptel driver to not generate a dialtone when you lift a handset, instead passing control immediately to Asterisk. Asterisk will start executing the commands for this channel's &quot;s&quot; extension. This is sometimes referred to as &quot;batphone mode&quot;. Default no.    immediate=yes"/><item key="OrdinalPosition" value="1"/><item key="JavaFieldName" value="Immediate"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="bool"/><item key="TblFieldName" value="immediate"/></section><section name="cancallforward"><item key="ElementDescription" value="If enabled, you may activate &quot;call forwarding immediate&quot; by dialing *72 (whereupon you get a dialrecall tone) followed by the extension number you wish to forward your calls to. If someone dials your extension, the call will be redirected to the forwarding number. You may disable the call forwarding by dialing *73. Default no.    cancallforward=yes"/><item key="OrdinalPosition" value="6"/><item key="JavaFieldName" value="Cancallforward"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="bool"/><item key="TblFieldName" value="cancallforward"/></section><section name="callwaitingcallerid"><item key="ElementDescription" value="Sets whether Asterisk will send Caller ID data to the handset during call waiting indication. Requires also setting callwaiting=yes. Default no.    callwaitingcallerid=yes"/><item key="OrdinalPosition" value="3"/><item key="JavaFieldName" value="Callwaitingcallerid"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="bool"/><item key="TblFieldName" value="callwaitingcallerid"/></section><section name="useincomingcalleridonzaptransfer"><item key="ElementDescription" value="If you set this option (Use Incoming Caller ID On Zap Transfer) to 'yes', then when you transfer a call to another phone, the original caller's Caller ID will get forwarded on too. Default no.    useincomingcalleridonzaptransfer=yes"/><item key="OrdinalPosition" value="10"/><item key="JavaFieldName" value="Useincomingcalleridonzaptransfer"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="jstring"/><item key="TblFieldName" value="useincomingcalleridonzaptransfer"/></section><section name="transfer"><item key="ElementDescription" value="This option has effect only when threewaycalling=yes. If threewaycalling=yes and transfer=yes, then once you've placed a call on hold with a hook flash, you can transfer that call to another extension by dialing the extension and hanging up. Default no.    transfer=yes"/><item key="OrdinalPosition" value="5"/><item key="JavaFieldName" value="Transfer"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="bool"/><item key="TblFieldName" value="transfer"/></section><section name="callwaiting"><item key="ElementDescription" value="If enabled, Asterisk will generate &quot;call waiting pips&quot; when you are already in a conversation on your FXS handset when someone tries to call you. If the channel has call waiting by default, you can temporarily disable it by lifting the handset and dialing *70, whereupon you will get a dialrecall tone and may then dial the intended number. There is no corresponding way to temporarily enable call waiting for channels that have it off by default. Default no.    callwaiting=yes"/><item key="OrdinalPosition" value="2"/><item key="JavaFieldName" value="Callwaiting"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="bool"/><item key="TblFieldName" value="callwaiting"/></section></section><section name="Timing_Parameters"><item key="ElementDescription" value="These keywords are used only with (non-PRI) T1 lines. All values are in milliseconds. These do not need to be set in most configurations, as the defaults work with most hardware. It has been noted that the common Adtran Atlas uses long winks of about 300 milliseconds, and channels from them should be configured accordingly."/><item key="TableName" value="Timing_Parameters"/><item key="JavaClassName" value="Timing_Parameters"/><list key="aggfields"/><list key="TableFKFields"/><list key="TablePKFields"/><list key="TableMapFields"/><list key="TableFields"><item value="prewink"/><item value="preflash"/><item value="wink"/><item value="rxwink"/><item value="rxflash"/><item value="flash"/><item value="start"/><item value="debounce"/></list><section name="debounce"><item key="ElementDescription" value="Sets the debounce timing. &quot;The debounce settings in the Asterisk configuration affects how Asterisk handles hookswitch transitions on its FXO/FXS interfaces.&quot;"/><item key="OrdinalPosition" value="7"/><item key="JavaFieldName" value="Debounce"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="int"/><item key="TblFieldName" value="debounce"/></section><section name="rxwink"><item key="ElementDescription" value="Sets the receive wink timing."/><item key="OrdinalPosition" value="3"/><item key="JavaFieldName" value="Rxwink"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="int"/><item key="TblFieldName" value="rxwink"/></section><section name="start"><item key="ElementDescription" value="Sets the start timing."/><item key="OrdinalPosition" value="6"/><item key="JavaFieldName" value="Start"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="int"/><item key="TblFieldName" value="start"/></section><section name="flash"><item key="ElementDescription" value="Sets the flash timing."/><item key="OrdinalPosition" value="5"/><item key="JavaFieldName" value="Flash"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="int"/><item key="TblFieldName" value="flash"/></section><section name="wink"><item key="ElementDescription" value="Sets the wink timing."/><item key="OrdinalPosition" value="2"/><item key="JavaFieldName" value="Wink"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="int"/><item key="TblFieldName" value="wink"/></section><section name="rxflash"><item key="ElementDescription" value="Sets the receive flash timing."/><item key="OrdinalPosition" value="4"/><item key="JavaFieldName" value="Rxflash"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="int"/><item key="TblFieldName" value="rxflash"/></section><section name="prewink"><item key="ElementDescription" value="Sets the pre-wink timing."/><item key="OrdinalPosition" value="0"/><item key="JavaFieldName" value="Prewink"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="int"/><item key="TblFieldName" value="prewink"/></section><section name="preflash"><item key="ElementDescription" value="Sets the pre-flash timing."/><item key="OrdinalPosition" value="1"/><item key="JavaFieldName" value="Preflash"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="int"/><item key="TblFieldName" value="preflash"/></section></section><section name="Analog_Trunk_Features"><item key="ElementDescription" value="analog features"/><item key="TableName" value="Analog_Trunk_Features"/><item key="JavaClassName" value="Analog_Trunk_Features"/><list key="aggfields"/><list key="TableFKFields"/><list key="TablePKFields"/><list key="TableMapFields"/><list key="TableFields"><item value="usedistinctiveringdetection"/><item value="dring1"/><item value="dring2"/><item value="dring3"/><item value="dring1context"/><item value="dring2context"/><item value="dring3context"/><item value="busydetect"/><item value="busycount"/><item value="callprogress"/><item value="pulse"/></list><section name="dring2"><item key="ElementDescription" value="see 1"/><item key="OrdinalPosition" value="2"/><item key="JavaFieldName" value="Dring2"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="jstring"/><item key="TblFieldName" value="dring2"/></section><section name="pulse"><item key="ElementDescription" value="The standard installation of Asterisk does not permit you to specify that a Zaptel device use pulse dialing, even though the Zaptel driver supports pulse dialing. But you can apply a patch file to enable you to specify pulse dialing with the pulse keyword. See Pulse Dialing on Zap Channels for the patch.    pulse=yes"/><item key="OrdinalPosition" value="10"/><item key="JavaFieldName" value="Pulse"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="bool"/><item key="TblFieldName" value="pulse"/></section><section name="callprogress"><item key="ElementDescription" value="Asterisk can attempt to monitor the state of the call to listen for a ringing tone, busy tone, congestion tone, and sounds indicating that the line has been answered. It appears that this feature is independent of the busydetect feature; it seems that both can run in parallel, and both will independently attempt to recognize a busy tone. The callprogress feature is highly experimental and can easily detect false answers, so don't count on it being very accurate. Also, it is currently configured only for standard U.S. phone tones. Default no.   callprogress = yes"/><item key="OrdinalPosition" value="9"/><item key="JavaFieldName" value="Callprogress"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="bool"/><item key="TblFieldName" value="callprogress"/></section><section name="dring3context"><item key="ElementDescription" value="see 1 too"/><item key="OrdinalPosition" value="6"/><item key="JavaFieldName" value="Dring3context"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="jstring"/><item key="TblFieldName" value="dring3context"/></section><section name="dring1context"><item key="ElementDescription" value="Along with setting up to three distinctive ring patterns with dring1, dring2 and dring3, you also set corresponding contexts for incoming calls matching those distinctive ring patterns to jump into. If an incoming call does not match any of the distinctive ring patterns defined, then of course it will enter Asterisk with the default context defined for this channel."/><item key="OrdinalPosition" value="4"/><item key="JavaFieldName" value="Dring1context"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="jstring"/><item key="TblFieldName" value="dring1context"/></section><section name="busycount"><item key="ElementDescription" value="This option requires busydetect=yes. You can specify how many busy tones to wait before hanging up. The default is 3, but better results can be achieved if set to 6 or even 8. The higher the number, the more time is needed to detect a disconnected channel, but the lower the probability mistaking some other sound as being a busy tone.   busycount=5"/><item key="OrdinalPosition" value="8"/><item key="JavaFieldName" value="Busycount"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="int"/><item key="TblFieldName" value="busycount"/></section><section name="busydetect"><item key="ElementDescription" value="If enabled, Asterisk will analyze the audio coming in on the line during a call or a dial attempt to attempt to recognize busy signals. This is useful on analog trunk interfaces both to detect a busy signal when dialing out, and for detecting when the person has hung up. See also Disconnect Supervision. Be sure that you don't use this on digital interfaces like QuadBri cards and so on. Otherwise you will run in &quot;broken calls&quot; problems. default=no    busydetect=yes"/><item key="OrdinalPosition" value="7"/><item key="JavaFieldName" value="Busydetect"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="bool"/><item key="TblFieldName" value="busydetect"/></section><section name="dring1"><item key="ElementDescription" value="If you set usedistinctiveringdetection=yes, then you may define up to three different distinctive ring styles for Asterisk to attempt to recognize. Each style is defined as a comma separated list of up to three integers. Nobody has yet documented what these numbers mean, so you're on your own when it comes to trying to figure out what numbers to use for the distinctive ring syles used by your phone company in your country. But the tip is to use the Asterisk console in verbose mode, and apparently it reports numbers describing the ring patterns it sees. These patterns may be a starting point:"/><item key="OrdinalPosition" value="1"/><item key="JavaFieldName" value="Dring1"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="jstring"/><item key="TblFieldName" value="dring1"/></section><section name="dring3"><item key="ElementDescription" value="see 2"/><item key="OrdinalPosition" value="3"/><item key="JavaFieldName" value="Dring3"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="jstring"/><item key="TblFieldName" value="dring3"/></section><section name="usedistinctiveringdetection"><item key="ElementDescription" value="Whether or not to attempt to recognize distinctive ring styles on incoming calls. This does not require audio analyisis because rings are simple transitions of the analog line. It's merely a matter of matching the transition pattern. Default no.    usedistinctiveringdetection=yes"/><item key="OrdinalPosition" value="0"/><item key="JavaFieldName" value="Usedistinctiveringdetection"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="bool"/><item key="TblFieldName" value="usedistinctiveringdetection"/></section><section name="dring2context"><item key="ElementDescription" value="see 1"/><item key="OrdinalPosition" value="5"/><item key="JavaFieldName" value="Dring2context"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="jstring"/><item key="TblFieldName" value="dring2context"/></section></section><section name="ISDN_PRI_Switch"><item key="ElementDescription" value="If you have a PRI line, specify your type of switch here. (PRI is a type of ISDN typically used to connect a PBX to a telephone exchange. They have multiple channels on the one connection.)"/><item key="TableName" value="ISDN_PRI_Switch"/><item key="JavaClassName" value="ISDN_PRI_Switch"/><list key="aggfields"><item value="Multilink_PPP"/></list><list key="TableFKFields"><item value="Multilink_PPP"/></list><list key="TablePKFields"/><list key="TableMapFields"/><list key="TableFields"><item value="switchtype"/><item value="overlapdial"/><item value="pridialplan"/><item value="priindication"/></list><section name="overlapdial"><item key="ElementDescription" value="Whether Asterisk can dial this switch using overlap digits. Default    overlapdial=yes"/><item key="OrdinalPosition" value="1"/><item key="JavaFieldName" value="Overlapdial"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="jstring"/><item key="TblFieldName" value="overlapdial"/></section><section name="priindication"><item key="ElementDescription" value="Tells how Asterisk should indicate Busy() and Congestion() to the switch/user. Default inband. Accepted values are:     * inband:Asterisk plays indication tones without answering; not available on all PRI/BRI subscription lines     * outofband:Asterisk disconnects with busy/congestion information code so the switch will play the indication tones to the caller. Busy() will now do same as setting PRI_CAUSE=17 and Hangup().     priindication=outofband"/><item key="OrdinalPosition" value="3"/><item key="JavaFieldName" value="Priindication"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="jstring"/><item key="TblFieldName" value="priindication"/></section><section name="switchtype"><item key="ElementDescription" value="Sets the type of PRI switch being used. Defaultnational. Acceptable values are:     * national:National ISDN type2 (common in the US)     * ni1:National ISDN type 1     * dms100:Nortel DMS100     * 4ess:AT&amp;T 4ESS     * 5ess:Lucent 5ESS     * euroisdn:EuroISDN     * qsig:Minimalistic protocol to build a &quot;network&quot; with two or more PBX of different vendors!"/><item key="OrdinalPosition" value="0"/><item key="JavaFieldName" value="Switchtype"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="jstring"/><item key="TblFieldName" value="switchtype"/></section><section name="pridialplan"><item key="ElementDescription" value="Sets an option required for some (rare) switches that require a dialplan parameter to be passed. This option is ignored by most PRI switches. It may be necessary on a few pieces of hardware. Valid options are unknown, local, private, national, and international. This option can almost always be left unchanged from the default. Default national.    pridialplan=local"/><item key="OrdinalPosition" value="2"/><item key="JavaFieldName" value="Pridialplan"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="jstring"/><item key="TblFieldName" value="pridialplan"/></section></section><section name="Audio_Quality_Tuning_Options"><item key="ElementDescription" value="These options adjust certain parameters of Asterisk that affect the audio quality of Zapata channels. See also:     * Echo Cancellation on the Wildcard X100P     * Echo Cancellation in Asterisk     * Asterisk Echo Cancellation&lt;paraDesc&gt;FXO and FXS lines     * Asterisk Echo Avoidance     * Echo Analysis for Voice over IP"/><item key="TableName" value="Audio_Quality_Tuning_Options"/><item key="JavaClassName" value="Audio_Quality_Tuning_Options"/><list key="aggfields"/><list key="TableFKFields"/><list key="TablePKFields"/><list key="TableMapFields"/><list key="TableFields"><item value="relaxdtmf"/><item value="echocancel"/><item value="echocancelwhenbridged"/><item value="echotraining"/><item value="rxgain"/><item value="txgain"/></list><section name="relaxdtmf"><item key="ElementDescription" value="If you are having trouble with DTMF detection, you can relax the DTMF detection parameters. Relaxing them may make the DTMF detector more likely to have &quot;talkoff&quot; where DTMF is detected when it shouldn't be. Default:no.    relaxdtmf=yes"/><item key="OrdinalPosition" value="0"/><item key="JavaFieldName" value="Relaxdtmf"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="bool"/><item key="TblFieldName" value="relaxdtmf"/></section><section name="echotraining"><item key="ElementDescription" value="In some cases, the echo canceller doesn't train quickly enough and there is echo at the beginning of the call which then quickly fades out. Enabling echo training will cause Asterisk to briefly mute the channel, send an impulse, and use the impulse response to pre-train the echo canceller so it can start out with a much closer idea of the actual echo. However, the characteristics of some trunks may change as the endpoints become connected and, if there is a considerable delay between the circuit being 'up' and the endpoints being finalised, the training impulse may measure the characteristics of the open trunk rather than the completed circuit. Accordingly you may either specify a value between 10ms and 4000ms to delay before starting the impulse response process or 'yes', which equates to 400ms. Default:undefined.    echotraining=no"/><item key="OrdinalPosition" value="3"/><item key="JavaFieldName" value="Echotraining"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="bool"/><item key="TblFieldName" value="echotraining"/></section><section name="echocancelwhenbridged"><item key="ElementDescription" value="Enables or disables echo cancellation during a bridged TDM call. In principle, TDM bridged calls should not require echo cancellation, but often times audio performance is improved with this option enabled. Default:no.    echocancelwhenbridged=yes"/><item key="OrdinalPosition" value="2"/><item key="JavaFieldName" value="Echocancelwhenbridged"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="bool"/><item key="TblFieldName" value="echocancelwhenbridged"/></section><section name="echocancel"><item key="ElementDescription" value="Disable or enable echo cancellation (default is 'yes'). It is recommended that you do not turn this off. You may specify echocancel as 'yes' (128 taps), 'no' (0 taps, disabled), or a preset number of taps which are one of 16, 32, 64, 128, or 256. Each tap is one sample from the data stream, so on a T1 this will be 1/8000 of a second. Accordingly the number of taps equate to a 2ms, 4ms, 8ms, 16ms or 32ms tail length. Beware that if you set echocancel to a different value, Asterisk will fall back to the default of 128 taps without warning.    echocancel=no"/><item key="OrdinalPosition" value="1"/><item key="JavaFieldName" value="Echocancel"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="bool"/><item key="TblFieldName" value="echocancel"/></section><section name="txgain"><item key="ElementDescription" value="Adjusts transmit gain. This can be used to raise or lower the outgoing volume to compensate for hardware differences. Takes the same type of argument as rxgain. Default:0.0    txgain=-15.9"/><item key="OrdinalPosition" value="5"/><item key="JavaFieldName" value="Txgain"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="float"/><item key="TblFieldName" value="txgain"/></section><section name="rxgain"><item key="ElementDescription" value="Adjusts receive gain. This can be used to raise or lower the incoming volume to compensate for hardware differences. You specify gain as a decimal number from -100 to 100 representing 100% to 100% of capacity. Default value 0.0    rxgain=4.2"/><item key="OrdinalPosition" value="4"/><item key="JavaFieldName" value="Rxgain"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="float"/><item key="TblFieldName" value="rxgain"/></section></section><section name="zaptelchannel"><item key="ElementDescription" value="zaptel channel def"/><item key="TableName" value="zaptelchannel"/><item key="JavaClassName" value="Zaptelchannel"/><list key="aggfields"><item value="Analog_Handset_Features"/><item value="Analog_Trunk_Features"/><item value="Audio_Quality_Tuning_Options"/><item value="Call_Logging_Options"/><item value="Caller_ID_Options"/><item value="ISDN_PRI_Switch"/><item value="Timing_Parameters"/><item value="other"/></list><list key="TableFKFields"><item value="Analog_Handset_Features"/><item value="Analog_Trunk_Features"/><item value="Audio_Quality_Tuning_Options"/><item value="Call_Logging_Options"/><item value="Caller_ID_Options"/><item value="ISDN_PRI_Switch"/><item value="Timing_Parameters"/><item value="other"/></list><list key="TablePKFields"/><list key="TableMapFields"/><list key="TableFields"><item value="signalling"/><item value="context"/><item value="channel"/></list><section name="context"><item key="ElementDescription" value="This specifies which context a call will start in. The context controls how Asterisk will handle the call. Contexts are defined in the Dialplan. Default:&quot;default&quot;.    context=internal"/><item key="OrdinalPosition" value="1"/><item key="JavaFieldName" value="Context"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="jstring"/><item key="TblFieldName" value="context"/></section><section name="signalling"><item key="ElementDescription" value="Sets the channel signaling type. These parameters should match the Zaptel driver configuration. The setting to use depends partly on which interface card you have. Asterisk will fail to start if a channel signaling definition is incorrect or unworkable, if the statements do not match the Zaptel driver configuration, or if the device is not present or properly configured. The correct setting to use is almost certainly one of the following four: fxs_ks, fxo_ks, pri_cpe or pri_net. This setting has no default value; you must set a value before allocating a channel."/><item key="OrdinalPosition" value="0"/><item key="JavaFieldName" value="Signalling"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="jstring"/><item key="TblFieldName" value="signalling"/></section><section name="channel"><item key="ElementDescription" value="This keyword is unlike all the other keywords in this configuration file, because where all the other keywords merely specify settings to use, this keyword causes Asterisk to actually allocate a channel with the settings that have been specified earlier in the file. The channel keyword defines one or more channels. Each channel definition will inherit all options stated ahead of it in this file. Channels maybe specified individually, separated by commas, or as a range separated by a hyphen. Allocating a channel will not &quot;clear&quot; the settings, so any channels defined later on in this file will inherit the options for this channel unless you override settings."/><item key="OrdinalPosition" value="2"/><item key="JavaFieldName" value="Channel"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="jstring"/><item key="TblFieldName" value="channel"/></section></section><section name="Caller_ID_Options"><item key="ElementDescription" value="caller id"/><item key="TableName" value="Caller_ID_Options"/><item key="JavaClassName" value="Caller_ID_Options"/><list key="aggfields"/><list key="TableFKFields"/><list key="TablePKFields"/><list key="TableMapFields"/><list key="TableFields"><item value="callerid"/><item value="usecallerid"/><item value="hidecallerid"/><item value="restrictcid"/><item value="usecallingpres"/></list><section name="callerid"><item key="ElementDescription" value="Sets the Caller ID string to forward to the recipient when calls come in from this channel. You normally use this to set the Caller ID for handsets. Specify the Caller ID name in double quotation marks, followed by the Caller ID number in &lt;&gt; symbols. For trunk lines, set to &quot;asreceived&quot; to pass the received Caller ID forward.   callerid=&quot;Mark Spencer&quot; &lt;256 428-6000&gt;   callerid=   callerid=asreceived Important Note: :Caller ID can only be transmitted to the public phone network with supported hardware, such as a PRI. It is not possible to set external caller ID on analog lines."/><item key="OrdinalPosition" value="0"/><item key="JavaFieldName" value="Callerid"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="jstring"/><item key="TblFieldName" value="callerid"/></section><section name="usecallingpres"><item key="ElementDescription" value="(PRI channels only) Whether or not to use the Caller ID presentation for the outgoing call that the calling switch is sending. See also the CallingPres command.    usecallingpres=no"/><item key="OrdinalPosition" value="4"/><item key="JavaFieldName" value="Usecallingpres"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="bool"/><item key="TblFieldName" value="usecallingpres"/></section><section name="restrictcid"><item key="ElementDescription" value="(PRI channels only) This option has effect only when hidecallerid=no. If hidecallerid=no and restrictcid=yes, Asterisk will prevent the sending of the Caller ID data as a presentation number when making outgoing calls (ANI data is still sent). Default:no.    restrictcid=yes"/><item key="OrdinalPosition" value="3"/><item key="JavaFieldName" value="Restrictcid"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="bool"/><item key="TblFieldName" value="restrictcid"/></section><section name="usecallerid"><item key="ElementDescription" value="For handsets, this option will cause Asterisk to send Caller ID data to the handset when ringing it. For trunk lines, this option causes Asterisk to look for Caller ID on incoming calls. Default:yes.    usecallerid=no"/><item key="OrdinalPosition" value="1"/><item key="JavaFieldName" value="Usecallerid"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="bool"/><item key="TblFieldName" value="usecallerid"/></section><section name="hidecallerid"><item key="ElementDescription" value="(Not for FXO trunk lines) For PRI channels, this will stop the sending of Caller ID on outgoing calls. For FXS handsets, this will stop Asterisk from sending this channel's Caller ID information to the called party when you make a call using this handset. FXS handset users may enable or disable sending of their Caller ID for the current call only by lifting the handset and dialing *82 (enable) or *67 (disable); you will then get a &quot;dialrecall&quot; tone whereupon you can dial the number of the extension you wish to contact. Default:no.    hidecallerid=yes"/><item key="OrdinalPosition" value="2"/><item key="JavaFieldName" value="Hidecallerid"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="bool"/><item key="TblFieldName" value="hidecallerid"/></section></section><section name="zapataconf"><item key="ElementDescription" value="The format of the zapata.conf file is unfortunately not as simple as it could be. Most keywords do not do anything by themselves; they merely set up the parameters of any channel definitions that follow. The channel keyword actually creates the channel, using the settings specified before it."/><item key="TableName" value="zapataconf"/><item key="JavaClassName" value="Zapataconf"/><list key="aggfields"/><list key="TableFKFields"/><list key="TablePKFields"/><list key="TableMapFields"><item value="zaptelchannel"/></list><list key="TableFields"><item value="zaptelid"/></list><section name="zaptelid"><item key="ElementDescription" value=""/><item key="OrdinalPosition" value="0"/><item key="JavaFieldName" value="Zaptelid"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="jstring"/><item key="TblFieldName" value="zaptelid"/></section></section><section name="Call_Logging_Options"><item key="ElementDescription" value="Asterisk normally generates Call Detail Records (CDR), being a log or database of the calls made through Asterisk. This data can be used for Automated Machine Accounting (AMA). See Asterisk Billing."/><item key="TableName" value="Call_Logging_Options"/><item key="JavaClassName" value="Call_Logging_Options"/><list key="aggfields"/><list key="TableFKFields"/><list key="TablePKFields"/><list key="TableMapFields"/><list key="TableFields"><item value="accountcode"/><item value="amaflags"/></list><section name="accountcode"><item key="ElementDescription" value="Sets the data for the &quot;account code&quot; field in the CDR for calls placed from this channel. The account code may be any alphanumeric string. It may be overridden at call time with the (( Asterisk cmd SetAccount|SetAccount)) command.   accountcode=spencer145"/><item key="OrdinalPosition" value="0"/><item key="JavaFieldName" value="Accountcode"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="jstring"/><item key="TblFieldName" value="accountcode"/></section><section name="amaflags"><item key="ElementDescription" value="Sets the AMA flags, affecting the categorization of entries in the call detail records. Possible values are:     * default:Let the CDR system use its default value.     * omit:Do not record calls.     * billing:Mark the entry for billing     * documentation:Mark the entry for documentation.    amaflags=billing"/><item key="OrdinalPosition" value="1"/><item key="JavaFieldName" value="Amaflags"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="jstring"/><item key="TblFieldName" value="amaflags"/></section></section><section name="Multilink_PPP"><item key="ElementDescription" value="If you have an ISDN PRI, you may be able to run multi-link PPP over it, to provide you with a data connection. Multi-link PPP is a technology that allows channels on a PRI to be dynamically allocated between voice and data. Asterisk can take voice channels allocated to it, dial a Remote Access Server, and dump the channels into a special extension that delivers the channel to the zaptel data layer. Configure the settings here, and then see the ZapRAS command to make it happen. PRI channels can have an idle extension and a minunused number. So long as at least minunused channels are idle, the Zap channel module will try to dial idledial on them, and then Asterisk will begin executing the commands for the context and extension specified by idleext. When channels are needed for voice calls, the &quot;idle&quot; calls are disconnected (so long as there are at least minidle calls still running, of course) to make more channels available. The primary use of this is to create a dynamic service, where idle channels are bundled through multilink PPP, thus more efficiently utilizing combined voice/data services than conventional fixed mappings/muxings."/><item key="TableName" value="Multilink_PPP"/><item key="JavaClassName" value="Multilink_PPP"/><list key="aggfields"/><list key="TableFKFields"/><list key="TablePKFields"/><list key="TableMapFields"/><list key="TableFields"><item value="minunused"/><item value="minidle"/><item value="idledial"/><item value="idleext"/></list><section name="minidle"><item key="ElementDescription" value="The minimum number of idle channels to bundle for the data link. Asterisk will keep this number of channels open for data, rather than taking them back for voice channels when needed. Takes an integer."/><item key="OrdinalPosition" value="1"/><item key="JavaFieldName" value="Minidle"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="int"/><item key="TblFieldName" value="minidle"/></section><section name="idledial"><item key="ElementDescription" value="The number to dial as the idle number. This is typically the number to dial a Remote Access Server (RAS). Channels being idled for data will be sent to this extension. Takes an integer that does not conflict with any other extension in the Dialplan, and has been defined as an idleext."/><item key="OrdinalPosition" value="2"/><item key="JavaFieldName" value="Idledial"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="int"/><item key="TblFieldName" value="idledial"/></section><section name="idleext"><item key="ElementDescription" value="The extension to use as the idle extension. Takes a value in the form of exten@context. Typically, the extension would be an extension to run the ZapRAS command."/><item key="OrdinalPosition" value="3"/><item key="JavaFieldName" value="Idleext"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="jstring"/><item key="TblFieldName" value="idleext"/></section><section name="minunused"><item key="ElementDescription" value="The minimum number of unused channels available. If there are fewer channels available, Asterisk will not attempt to bundle any channels and give them to the data connection. Takes an integer."/><item key="OrdinalPosition" value="0"/><item key="JavaFieldName" value="Minunused"/><item key="ForainTableName" value=""/><item key="TblFieldType" value="jstring"/><item key="TblFieldName" value="minunused"/></section></section></section><section name="ProjectConfig"><item key="TypeMapperFileName" value=""/><item key="ProjectName" value=""/></section></section>