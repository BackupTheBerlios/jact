/* This file was generated by SableCC (http://www.sablecc.org/). */

package de.urszeidler.jact.model.applicationParser.node;

import java.util.*;
import de.urszeidler.jact.model.applicationParser.analysis.*;

public final class ACpara extends PCpara
{
    private PPara _para_;
    private TComma _comma_;

    public ACpara()
    {
    }

    public ACpara(
        PPara _para_,
        TComma _comma_)
    {
        setPara(_para_);

        setComma(_comma_);

    }
    public Object clone()
    {
        return new ACpara(
            (PPara) cloneNode(_para_),
            (TComma) cloneNode(_comma_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACpara(this);
    }

    public PPara getPara()
    {
        return _para_;
    }

    public void setPara(PPara node)
    {
        if(_para_ != null)
        {
            _para_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _para_ = node;
    }

    public TComma getComma()
    {
        return _comma_;
    }

    public void setComma(TComma node)
    {
        if(_comma_ != null)
        {
            _comma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _comma_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_para_)
            + toString(_comma_);
    }

    void removeChild(Node child)
    {
        if(_para_ == child)
        {
            _para_ = null;
            return;
        }

        if(_comma_ == child)
        {
            _comma_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_para_ == oldChild)
        {
            setPara((PPara) newChild);
            return;
        }

        if(_comma_ == oldChild)
        {
            setComma((TComma) newChild);
            return;
        }

    }
}
